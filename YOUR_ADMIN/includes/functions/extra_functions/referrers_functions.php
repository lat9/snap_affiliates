<?php
// -----
// Part of the SNAP Affiliates plugin for Zen Carts v155 and later.
// Copyright (c) 2019, Vinos de Frutas Tropicales (lat9)
//
if (!defined('IS_ADMIN_FLAG')) {
    die('Illegal Access');
}

// -----
// This function, called from the plugin's admin observer, determines if the specified order resulted in a commission to one 
// of the store's affiliates, returning an image with a link to the affiliate's details if so.  Returns '' if no
// commission payment was generated by the order.
// 
function snap_affiliates_image($oID = false) 
{
    $image_info = '';
    $commissioned_order_indicator = '<i class="fa fa-money" style="color: green;" title="' . TEXT_COMMISSIONED_ORDER . '"></i>';
  
    // -----
    // If the caller requested a link to the referrer associated with the order id ...
    //
    if ($oID !== false) {
        // -----
        // Check to see if the specified order has an associated referrer commission ...
        //
        $oID = (int)$oID;
        $sa_info = $GLOBALS['db']->Execute(
            "SELECT c.customers_id as id, c.customers_firstname, c.customers_lastname, r.referrer_banned, rc.commission_rate, rc.commission_paid 
               FROM " . TABLE_REFERRERS . " r
                    INNER JOIN " . TABLE_CUSTOMERS . " c 
                        ON c.customers_id = r.referrer_customers_id
                    INNER JOIN " . TABLE_COMMISSION . " rc
                        ON rc.commission_orders_id = $oID
              WHERE rc.commission_referrer_key = r.referrer_key
              LIMIT 1"
        );
        if (!$sa_info->EOF) {
            $image_info = '<a href="' . zen_href_link(FILENAME_REFERRERS, 'referrer=' . $sa_info->fields['id'] . '&amp;mode=details') . '">' . $commissioned_order_indicator . '</a>&nbsp;';
        }
    // -----
    // Otherwise, just output the image with text to use a guidance for the display.
    //
    } else {
        $image_info = '&nbsp;&nbsp;' . $commissioned_order_indicator . '&nbsp;&nbsp;' . TEXT_COMMISSIONED_ORDER;
    }
    return $image_info;
}

function snap_send_notification_email($referrer, $subject, $text, $html) 
{
    $customer = $GLOBALS['db']->Execute(
        "SELECT customers_firstname, customers_lastname, customers_email_address, customers_telephone, customers_fax 
           FROM " . TABLE_CUSTOMERS . " 
          WHERE customers_id = " . (int)$referrer['customers_id'] . "
          LIMIT 1"
    );

    if (!$customer->EOF) {
        $html_msg = array( 'EMAIL_SUBJECT' => $subject, 'EMAIL_MESSAGE_HTML' => $html );
        $customers_name = $customer->fields['customers_firstname'] . ' ' . $customer->fields['customers_lastname'];
        $customers_email = $customer->fields['customers_email_address'];
        zen_mail($customers_name, $customers_email, $subject, $text, STORE_NAME, EMAIL_FROM, $html_msg);
    
        if (defined('SNAP_ADMIN_EMAIL') && zen_validate_email(SNAP_ADMIN_EMAIL)) {
            $extra_info = email_collect_extra_info($customers_name, $customers_email, $customers_name, $customers_email, $customer->fields['customers_telephone'], $customer->fields['customers_fax']);
            $html_msg['EXTRA_INFO'] = $extra_info['HTML'];
            zen_mail('', SNAP_ADMIN_EMAIL, $subject, $text . "\n" . $extra_info['TEXT'], STORE_NAME, EMAIL_FROM, $html_msg);
        }
    } 
}

// -----
// This function returns a boolean indication, identifying whether (true) or not we're
// currently running on a Zen Cart version 1.5.6 or later.
//
function snap_is_zc156()
{
    return ((PROJECT_VERSION_MAJOR . '.' . PROJECT_VERSION_MINOR) >= '1.5.6');
}

// -----
// This function, used by the plugin's admin processing page, provides a compatible interface for
// the button-generation, using the button image for Zen Cart 1.5.5 installations and the
// Bootstrap-flavored button for Zen Cart 1.5.6.
//
function snap_button_link($link, $text, $image, $class = '')
{
    if (snap_is_zc156()) {
        $button_class = ($class == '') ? 'btn-info' : $class;
        $button_link = '<a href="' . $link . '" class="btn ' . $button_class . '" role="button">' . $text . '</a>';
    } else {
        $button_link = '<a href="' . $link . '">' . zen_image_button($image, $text) . '</a>';
    }
    return $button_link;
}

// -----
// This function, used by the plugin's admin processing page, provides a compatible interface for
// the submit-button-generation, using the button image for Zen Cart 1.5.5 installations and the
// Bootstrap-flavored button for Zen Cart 1.5.6.
//
function snap_submit_button($name, $text, $class = '', $parms = '')
{
    $parms = ($parms == '') ? $parms : " $parms";
    if (snap_is_zc156()) {
        $button_class = ($class == '') ? 'btn-primary' : $class;
        $submit_button = '<button type="submit" class="btn ' . $button_class . '"' . $parms . ' name="' . $name . '" value="' . $text . '">' . $text . '</button>';
    } else {
        $submit_button = '<input type="submit" name="' . $name . '" value="' . $text . '"' . $parms . ' />';
    }
    return $submit_button;
}

// -----
// This function, used on the plugin's admin processing page, "adapts" the storefront date dropdown
// for admin-level use.
//
function snap_admin_get_date_dropdown($prefix, $selected_month, $selected_year, $referrer_customer_id)
{
    $_SESSION['customer_id'] = $referrer_customer_id;
    $dropdown = snap_get_date_dropdown($prefix, $selected_month, $selected_year);
    unset($_SESSION['customer_id']);
    return $dropdown;
}